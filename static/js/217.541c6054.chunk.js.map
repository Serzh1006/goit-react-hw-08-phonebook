{"version":3,"file":"static/js/217.541c6054.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/icons/src/Close.tsx","webpack://react-homework-template/./src/components/contactsItem/contacts.module.css?b6a9","components/contactsItem/ContactsItem.jsx","webpack://react-homework-template/./src/components/contacts/contacts.module.css?6b98","components/contacts/Contacts.jsx","webpack://react-homework-template/./src/components/filter/filter.module.css?56b3","components/filter/Filter.jsx","webpack://react-homework-template/./src/components/loader/loader.module.css?525a","components/loader/Loader.jsx","webpack://react-homework-template/./src/components/updateContact/update.module.css?4eb3","components/updateContact/UpdateContact.jsx","webpack://react-homework-template/./src/components/phonebook/phonebook.module.css?eac4","components/phonebook/Phonebook.jsx","webpack://react-homework-template/./src/components/app.module.css?b380","pages/contacts/ContactsPage.jsx"],"sourcesContent":["import { createIcon } from \"@chakra-ui/icon\"\n\nexport const CloseIcon = createIcon({\n  displayName: \"CloseIcon\",\n  d: \"M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z\",\n})\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"contacts_contactsList__jR+Jq\",\"contactsItem\":\"contacts_contactsItem__X8-sm\",\"btnDelete\":\"contacts_btnDelete__a2bpd\",\"numberContact\":\"contacts_numberContact__1XBHA\"};","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { CloseIcon } from '@chakra-ui/icons';\nimport { deleteContactUser } from '../../servises/contactsApi/deleteContactApi';\nimport css from './contacts.module.css';\n\nconst ContactsItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={css.contactsItem}>\n      <p className={css.nameContact}>{name}</p>\n      <p className={css.numberContact}>{number}</p>\n      <button\n        className={css.btnDelete}\n        onClick={() => dispatch(deleteContactUser(id))}\n        type=\"button\"\n      >\n        <CloseIcon color={'black'} boxSize={3} />\n      </button>\n    </li>\n  );\n};\n\nexport default ContactsItem;\n\nContactsItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"contacts_contactsList__aACQx\",\"contactsItem\":\"contacts_contactsItem__e6Fky\",\"btnDelete\":\"contacts_btnDelete__hh1sp\"};","import { useSelector } from 'react-redux';\nimport ContactsItem from 'components/contactsItem/ContactsItem';\nimport { visibleContacts } from 'redux/selectors';\nimport css from './contacts.module.css';\n\nconst Contacts = () => {\n  const contactsFilters = useSelector(visibleContacts);\n\n  return (\n    <ul className={css.contactsList}>\n      {contactsFilters.map(contact => {\n        return (\n          <ContactsItem\n            key={contact.id}\n            id={contact.id}\n            name={contact.name}\n            number={contact.number}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"filter_filterLabel__3HlzA\",\"filterInput\":\"filter_filterInput__Hvnfk\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { Input } from '@chakra-ui/react';\nimport { selectFilter } from 'redux/selectors';\nimport { filterByName } from 'redux/filterSlice';\nimport css from './filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  return (\n    <label className={css.filterLabel}>\n      Find contacts by Name\n      <Input\n        placeholder=\"Enter name\"\n        className={css.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={e => dispatch(filterByName(e.target.value))}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"loader_loader__M-FUL\"};","import { ThreeDots } from 'react-loader-spinner';\nimport css from './loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={css.loader}>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#4fa94d\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"formPhonebook\":\"update_formPhonebook__oO-Vn\",\"label\":\"update_label__Z8b52\",\"input\":\"update_input__Rlww8\",\"btnSubmit\":\"update_btnSubmit__VQi0h\",\"nameErrorMessage\":\"update_nameErrorMessage__HMbYh\",\"numberErrorMessage\":\"update_numberErrorMessage__zN5fa\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { toast } from 'react-toastify';\nimport { Input } from '@chakra-ui/react';\nimport { Button } from '@chakra-ui/react';\nimport { selectContacts } from 'redux/selectors';\nimport { updateContactUser } from '../../servises/contactsApi/updateContactsApi';\nimport { messageObj } from '../../helpers/settings';\nimport css from './update.module.css';\n\nconst UpdateContact = () => {\n  const dispatch = useDispatch();\n  const dataContacts = useSelector(selectContacts);\n\n  const initialsValues = {\n    name: '',\n    number: '',\n  };\n\n  const schema = yup.object().shape({\n    name: yup.string().required(),\n    number: yup.string().min(9).max(13).required(),\n  });\n\n  const onUpdateForm = (values, { resetForm }) => {\n    const findObj = dataContacts.find(contact => contact.name === values.name);\n    if (findObj !== undefined) {\n      const data = {\n        id: findObj.id,\n        contact: values,\n      };\n      dispatch(updateContactUser(data));\n      resetForm();\n      return;\n    } else {\n      toast.error('Contact not found', messageObj);\n      resetForm();\n    }\n  };\n  return (\n    <Formik\n      initialValues={initialsValues}\n      validationSchema={schema}\n      onSubmit={onUpdateForm}\n    >\n      <Form className={css.formPhonebook}>\n        <label className={css.label}>\n          Name\n          <Field\n            as={Input}\n            className={css.input}\n            type=\"text\"\n            name=\"name\"\n            autoComplete=\"off\"\n          />\n        </label>\n\n        <ErrorMessage\n          className={css.nameErrorMessage}\n          component=\"div\"\n          name=\"name\"\n        />\n\n        <label className={css.label}>\n          Number\n          <Field\n            as={Input}\n            className={css.input}\n            type=\"tel\"\n            name=\"number\"\n            autoComplete=\"off\"\n          />\n        </label>\n        <ErrorMessage\n          className={css.numberErrorMessage}\n          component=\"div\"\n          name=\"number\"\n        />\n\n        <Button className={css.btnSubmit} type=\"submit\" colorScheme=\"green\">\n          Update Contact\n        </Button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default UpdateContact;\n","// extracted by mini-css-extract-plugin\nexport default {\"formPhonebook\":\"phonebook_formPhonebook__Ze-PS\",\"label\":\"phonebook_label__xTEUZ\",\"input\":\"phonebook_input__xQL83\",\"btnSubmit\":\"phonebook_btnSubmit__zwxW6\",\"nameErrorMessage\":\"phonebook_nameErrorMessage__R24Mr\",\"numberErrorMessage\":\"phonebook_numberErrorMessage__82ads\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { Input } from '@chakra-ui/react';\nimport { Button } from '@chakra-ui/react';\nimport UpdateContact from 'components/updateContact/UpdateContact';\nimport { addNewContactsToDB } from 'servises/contactsApi/addContactsApi';\nimport { selectContacts } from 'redux/selectors';\nimport { messageObj } from '../../helpers/settings';\nimport css from './phonebook.module.css';\n\nconst PhoneBook = () => {\n  const dataContacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const initialsValues = {\n    name: '',\n    number: '',\n  };\n\n  const schema = yup.object().shape({\n    name: yup.string().required(),\n    number: yup.string().min(9).max(13).required(),\n  });\n\n  const onSubmitForm = (values, { resetForm }) => {\n    const findName = dataContacts.find(contact => contact.name === values.name);\n    if (findName !== undefined) {\n      toast.error(`${findName.name} is already in contacts`, messageObj);\n      resetForm();\n      return;\n    } else {\n      dispatch(addNewContactsToDB(values));\n      resetForm();\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialsValues}\n        validationSchema={schema}\n        onSubmit={onSubmitForm}\n      >\n        <Form className={css.formPhonebook}>\n          <label className={css.label}>\n            Name\n            <Field\n              as={Input}\n              className={css.input}\n              type=\"text\"\n              name=\"name\"\n              autoComplete=\"off\"\n            />\n          </label>\n\n          <ErrorMessage\n            className={css.nameErrorMessage}\n            component=\"div\"\n            name=\"name\"\n          />\n\n          <label className={css.label}>\n            Number\n            <Field\n              as={Input}\n              className={css.input}\n              type=\"tel\"\n              name=\"number\"\n              autoComplete=\"off\"\n            />\n          </label>\n          <ErrorMessage\n            className={css.numberErrorMessage}\n            component=\"div\"\n            name=\"number\"\n          />\n\n          <Button className={css.btnSubmit} type=\"submit\" colorScheme=\"blue\">\n            Add Contact\n          </Button>\n        </Form>\n      </Formik>\n\n      <UpdateContact />\n    </>\n  );\n};\n\nexport default PhoneBook;\n","// extracted by mini-css-extract-plugin\nexport default {\"phoneBook\":\"app_phoneBook__owwP5\",\"contacts\":\"app_contacts__jPGw8\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Contacts from '../../components/contacts';\nimport Filter from '../../components/filter';\nimport Loader from '../../components/loader';\nimport PhoneBook from '../../components/phonebook';\nimport { selectContacts, selectLoading, selectLoggedIn } from 'redux/selectors';\nimport { fetchContacts } from '../../servises/contactsApi/fetchContactsApi';\nimport css from '../../components/app.module.css';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectLoading);\n  const contactsFromState = useSelector(selectContacts);\n  const isLoggedin = useSelector(selectLoggedIn);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isLoggedin) return <Navigate to={'/login'} />;\n    dispatch(fetchContacts());\n  }, [dispatch, isLoggedin]);\n\n  return (\n    <div className={css.contactsPage}>\n      <h2 className={css.phoneBook}>Phonebook</h2>\n      <PhoneBook />\n      <h2 className={css.contacts}>Contacts</h2>\n      <Filter />\n      {isLoading && <Loader />}\n      {contactsFromState.length !== 0 && <Contacts />}\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["CloseIcon","createIcon","displayName","d","id","name","number","dispatch","useDispatch","className","css","onClick","deleteContactUser","type","color","boxSize","contactsFilters","useSelector","visibleContacts","map","contact","value","selectFilter","I","placeholder","onChange","e","filterByName","target","height","width","radius","ariaLabel","wrapperStyle","wrapperClassName","visible","dataContacts","selectContacts","schema","yup","shape","required","min","max","initialValues","validationSchema","onSubmit","values","resetForm","findObj","find","undefined","data","updateContactUser","toast","messageObj","as","Input","autoComplete","component","colorScheme","findName","addNewContactsToDB","isLoading","selectLoading","contactsFromState","isLoggedin","selectLoggedIn","useEffect","to","fetchContacts","length","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme"],"sourceRoot":""}