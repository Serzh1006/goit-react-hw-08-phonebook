{"version":3,"file":"static/js/142.52a8d646.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/contactsItem/contacts.module.css?b6a9","components/contactsItem/ContactsItem.jsx","webpack://react-homework-template/./src/components/contacts/contacts.module.css?6b98","components/contacts/Contacts.jsx","webpack://react-homework-template/./src/components/filter/filter.module.css?56b3","components/filter/Filter.jsx","webpack://react-homework-template/./src/components/loader/loader.module.css?525a","components/loader/Loader.jsx","webpack://react-homework-template/./src/components/phonebook/phonebook.module.css?eac4","components/phonebook/Phonebook.jsx","webpack://react-homework-template/./src/components/app.module.css?b380","pages/contacts/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"contacts_contactsList__jR+Jq\",\"contactsItem\":\"contacts_contactsItem__X8-sm\",\"btnDelete\":\"contacts_btnDelete__a2bpd\"};","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContactUser } from '../../servises/contactsApi/deleteContactApi';\nimport css from './contacts.module.css';\n\nconst ContactsItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  return (\n    <li className={css.contactsItem}>\n      {name}: {number}\n      <button\n        className={css.btnDelete}\n        onClick={() => dispatch(deleteContactUser(id))}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactsItem;\n\nContactsItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"contacts_contactsList__aACQx\",\"contactsItem\":\"contacts_contactsItem__e6Fky\",\"btnDelete\":\"contacts_btnDelete__hh1sp\"};","import { useSelector } from 'react-redux';\nimport ContactsItem from 'components/contactsItem/ContactsItem';\nimport { visibleContacts } from 'redux/selectors';\nimport css from './contacts.module.css';\n\nconst Contacts = () => {\n  const contactsFilters = useSelector(visibleContacts);\n\n  return (\n    <ul className={css.contactsList}>\n      {contactsFilters.map(contact => {\n        return (\n          <ContactsItem\n            key={contact.id}\n            id={contact.id}\n            name={contact.name}\n            number={contact.number}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"filter_filterLabel__3HlzA\",\"filterInput\":\"filter_filterInput__Hvnfk\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\nimport { filterByName } from 'redux/filterSlice';\nimport css from './filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  return (\n    <label className={css.filterLabel}>\n      Find contacts by Name\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={e => dispatch(filterByName(e.target.value))}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"loader_loader__M-FUL\"};","import { ThreeDots } from 'react-loader-spinner';\nimport css from './loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={css.loader}>\n      {' '}\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#4fa94d\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"formPhonebook\":\"phonebook_formPhonebook__Ze-PS\",\"label\":\"phonebook_label__xTEUZ\",\"input\":\"phonebook_input__xQL83\",\"btnSubmit\":\"phonebook_btnSubmit__zwxW6\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addNewContactsToDB } from 'servises/contactsApi/addContactsApi';\nimport { selectContacts } from 'redux/selectors';\nimport { messageObj } from '../../helpers/settings';\nimport css from './phonebook.module.css';\n\nconst PhoneBook = () => {\n  const [name, setNameUser] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dataContacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const getValue = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setNameUser(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    const findName = dataContacts.find(contact => contact.nameUser === name);\n    if (findName !== undefined) {\n      toast.error(`${findName.nameUser} is already in contacts`, messageObj);\n      setNameUser('');\n      setNumber('');\n      return;\n    } else {\n      dispatch(addNewContactsToDB({ name, number }));\n    }\n    setNameUser('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.formPhonebook} onSubmit={onSubmitForm}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          autoComplete=\"off\"\n          value={name}\n          autoFocus=\"on\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={getValue}\n        />\n      </label>\n\n      <label className={css.label}>\n        Phone\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          autoComplete=\"off\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={getValue}\n        />\n      </label>\n\n      <button className={css.btnSubmit} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n};\n\nexport default PhoneBook;\n","// extracted by mini-css-extract-plugin\nexport default {\"phoneBook\":\"app_phoneBook__owwP5\",\"contacts\":\"app_contacts__jPGw8\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Contacts from '../../components/contacts/Contacts';\nimport Filter from '../../components/filter/Filter';\nimport Loader from '../../components/loader/Loader';\nimport PhoneBook from '../../components/phonebook/Phonebook';\nimport { selectContacts, selectLoading, selectLoggedIn } from 'redux/selectors';\nimport { fetchContacts } from '../../servises/contactsApi/fetchContactsApi';\nimport css from '../../components/app.module.css';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectLoading);\n  const contactsFromState = useSelector(selectContacts);\n  const isLoggedin = useSelector(selectLoggedIn);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isLoggedin) return <Navigate to={'/login'} />;\n    dispatch(fetchContacts());\n  }, [dispatch, isLoggedin]);\n\n  return (\n    <div>\n      <h2 className={css.phoneBook}>Phonebook</h2>\n      <PhoneBook />\n      <h2 className={css.contacts}>Contacts</h2>\n      <Filter />\n      {isLoading && <Loader />}\n      {contactsFromState.length !== 0 && <Contacts />}\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["id","name","number","dispatch","useDispatch","className","css","onClick","deleteContactUser","type","contactsFilters","useSelector","visibleContacts","map","contact","value","selectFilter","onChange","e","filterByName","target","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","useState","setNameUser","setNumber","dataContacts","selectContacts","getValue","onSubmit","preventDefault","findName","find","nameUser","undefined","toast","messageObj","addNewContactsToDB","autoComplete","autoFocus","pattern","title","required","isLoading","selectLoading","contactsFromState","isLoggedin","selectLoggedIn","useEffect","to","fetchContacts","length","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme"],"sourceRoot":""}